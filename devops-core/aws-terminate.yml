---

- hosts: launched # This uses the hosts that we put into the in-memory hosts repository with the add_host module.
  become: yes # On EC2 nodes, this is automatically passwordless.
  remote_user: ubuntu # This is the username for all ubuntu images, rather than root, or something weird.
  gather_facts: True  #We need to re-enable this, as we turned it off earlier.
  vars:
    region: ap-southeast-1
  vars_prompt:
    - name: "github_username"
      prompt: "Enter Github Username"
      private: false

    - name: "github_password"
      prompt: "Enter Github Password"
      private: true
  tasks:
    - name: Get public key
      become: yes
      become_user: ubuntu
      shell: sudo cat /home/ubuntu/.ssh/github_rsa.pub
      register: instance_key

    - name: Install pip,boto package from apt
      apt: name={{ item }} state=present
      with_items:
      - python-pip
      - python-boto

    - name: install httplib2
      become: yes
      become_user: ubuntu
      shell: sudo pip install httplib2

    - name: Get Github key list
      uri:
        url: "https://api.github.com/repos/{{ git_path }}/keys"
        method: GET
        force_basic_auth: yes
        user: "{{ github_username }}"
        password: "{{ github_password }}"
      register: key_list

    - debug: var=instance_key

    - include: remove-github-key.yml id={{ item.id }} key={{ item.key }}
      with_items: key_list.json

- hosts: launched
  gather_facts: True
  user: ubuntu
  sudo: True
  tasks:
    - ec2_facts:
      
- hosts: launched
  gather_facts: True
  connection: local
  vars:
    region: ap-southeast-1
  tasks:
  - name: Destroy all instances
    ec2:
      state: 'absent'
      region: '{{ region }}'
      instance_ids: '{{ item }}'
    with_items: hostvars[inventory_hostname]['ansible_ec2_instance_id']
#      when: instance_ip is not defined
#    - name: Destroy specfic instances
#      ec2:
#        state: 'absent'
#        region: '{{ region }}'
#        instance_ids: '{{ lookup("instance-id", instance_ip) }}'
#      when: instance_ip is defined

- name: Provision an EC2 node
  hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: default
    image: ami-96f1c1c4
    region: ap-southeast-1
  vars_files:
    - env_vars/base.yml
  tasks:
    - name: Remove instance from local host file
      local_action: lineinfile dest={{ host_file_path }} state=absent regexp="\w+\.\w+\.\w+\.\w+.*"
#      when: instance_id is not defined
